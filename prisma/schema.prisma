// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model WelcomeSettings {
  guildID     String   @id @map("guild_id")
  message     String
  channel     String?
  rejoins     Boolean  @default(false)
  instant     Boolean  @default(false)
  ignoreRoles String   @default("") @map("ignore_roles")
  reactWith   String?  @map("react_with")
  updatedAt   DateTime @updatedAt @map("updated_at")
}

model WelcomeJoins {
  guildID String @map("guild_id")
  userID  String @map("user_id")

  @@id([guildID, userID])
}

model ReportConfig {
  guildID   String   @id @map("guild_id")
  enabled   Boolean
  channelID String?  @map("channel_id")
  message   String
  updatedAt DateTime @updatedAt @map("updated_at")
}

model UserReport {
  reportID  String   @id @default(cuid()) @map("report_id")
  guildID   String   @map("guild_id")
  userID    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
}

model ReportBan {
  guildID   String   @map("guild_id")
  userID    String   @map("user_id")
  reason    String
  moderator String
  createdAt DateTime @default(now()) @map("created_at")

  @@id([guildID, userID])
}

model VoiceLogConfig {
  guildID   String   @id @map("guild_id")
  channelID String   @map("channel_id")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model ModLogConfig {
  guildID   String   @id @map("guild_id")
  channelID String   @map("channel_id")
  updatedAt DateTime @updatedAt @map("updated_at")
  enabled   Boolean  @default(false)

  memberAdd         Boolean @map("member_add") @default(false)
  memberAddNew      Int     @map("member_add_new") @default(0)
  memberAddInvite   Boolean @map("member_add_invite") @default(false)
  memberWelcome     Boolean @map("member_welcome") @default(false)
  memberRemove      Boolean @map("member_remove") @default(false)
  memberRemoveRoles Boolean @map("member_remove_roles") @default(false)
  memberBan         Boolean @map("member_ban") @default(false)
  memberUnban       Boolean @map("member_unban") @default(false)
  userUpdate        String  @map("user_update") @default("None")
  messageDelete     Boolean @map("message_delete") @default(false)
  messageDeleteBulk Boolean @map("message_delete_bulk") @default(false)
  channelCreate     Boolean @map("channel_create") @default(false)
  channelDelete     Boolean @map("channel_delete") @default(false)
  channelUpdate     Boolean @map("channel_update") @default(false)
  reactionActions   Boolean @map("reaction_actions") @default(false)
  automodAction     Boolean @map("automod_action") @default(false)
}

model WarningConfig {
  guildID        String   @id @map("guild_id")
  expiresAfter   Int      @map("expires_after")
  archiveEnabled Boolean  @default(false) @map("archive_enabled")
  archiveChannel String?  @map("archive_channel")
  updatedAt      DateTime @updatedAt @map("updated_at")
}

model WarningDirtyTracker {
  guildID      String   @id @map("guild_id")
  lastSetDirty DateTime @map("last_set_dirty")
  isDirty      Boolean  @map("is_dirty")
}

model Warning {
  guildID   String @map("guild_id")
  warningID Int    @map("warning_id")
  version   Int

  user        String
  userID      String    @map("user_id")
  reason      String
  permanent   Boolean   @default(false)
  void        Boolean   @default(false)
  moderatorID String?   @map("moderator_id")
  modNote     String?   @map("mod_note")
  createdAt   DateTime  @default(now()) @map("created_at")
  validUntil  DateTime? @map("valid_until")

  @@id([guildID, warningID, version])
}
